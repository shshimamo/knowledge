name: CI | Backend Main
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: knowledge-main-test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      matrix:
        go: [ '1.20' ]
    defaults:
      run:
        working-directory: backend/main
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        id: setup-go
        with:
          go-version: ${{ matrix.go }}
          cache: true
          cache-dependency-path: ./backend/main/go.sum

      - name: Check Cache Hit
        shell: bash
        run: |
          echo "cache-hit: ${{ steps.setup-go.outputs.cache-hit }}"

      - name: Check dependencies
        run: |
          go mod verify

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: backend/main

      - name: Migrate
        env:
          DB_HOST: localhost
          DB_PASSWORD: password
          APP_ENV: test
        run: |
          go install github.com/pressly/goose/v3/cmd/goose@v3.11.2
          make migration

      - name: Run test
        run: |
          cd ./db
          go test -v -test.config=../sqlboiler.test.toml ./db/...
          cd ../
          go test -v $(go list ./... | grep -v ./db)

      - name: Run govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...