name: E2E Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.5.1'
          cache: 'npm'
          cache-dependency-path: ./frontend/main/package-lock.json

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Install dependencies
        working-directory: ./frontend/main
        run: npm ci

      - name: Cache Playwright Browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('./frontend/main/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright Browsers
        working-directory: ./frontend/main
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Install goose for migrations
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker images
        run: |
          docker compose -f docker-compose.ci.yml build --parallel

      - name: Start PostgreSQL and setup databases
        run: |
          # E2Eテスト実行
          make test-e2e-ci

#      - name: Upload Playwright Report
#        uses: actions/upload-artifact@v3
#        if: always()
#        with:
#          name: playwright-report
#          path: frontend/main/playwright-report/
#          retention-days: 30
#
#      - name: Upload test results
#        uses: actions/upload-artifact@v3
#        if: always()
#        with:
#          name: test-results
#          path: frontend/main/test-results/
#          retention-days: 30

      - name: Cleanup
        if: always()
        run: |
          make clean-ci
